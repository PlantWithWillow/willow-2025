{% style %}
.section-{{ section.id }}-padding {
    padding-top: {{ section.settings.padding_top | times: 0.75 | round: 0 }}px;
    padding-bottom: {{ section.settings.padding_bottom | times: 0.75 | round: 0 }}px;
  }

  @media screen and (min-width: 750px) {
    .section-{{ section.id }}-padding {
      padding-top: {{ section.settings.padding_top }}px;
      padding-bottom: {{ section.settings.padding_bottom }}px;
    }
  }

  .how-it-works__grid--left {
    column-gap: calc(var(--grid-desktop-horizontal-spacing));
    align-items: center;
  }

  .how-it-works__images.grid,
  .how-it-works__text .grid {
    column-gap: calc(var(--grid-desktop-horizontal-spacing)/2);
    row-gap: calc(var(--grid-desktop-vertical-spacing)/2);
    width: 100%;
  }
  .how-it-works__images.grid > * {
    border-radius: var(--border-radius);
  }
  .how-it-works-card > * {
    border-radius: var(--border-radius);
    margin-bottom: 10px;
  }
  .step-no {
    border-radius: 50%;
    width: 32px !important;
    height: 32px !important;
    text-align: center;
    font-weight: bold;
    display: block;
  }
  .how-it-works__images .step-no {
    background: #fff;
    left: 12px !important;
    bottom: 12px !important;
    top: auto !important;
  }
  .how-it-works__text .step-no {
    background: var(--color-mint-green);
    position: relative !important;
  }
  .how-it-works__text .grid {
    flex-wrap: nowrap;
  }
  .how-it-works__text h3 {
    font-size: 1.8rem;
  }
  .how-it-works__text h3,
  .how-it-works__text p {
    margin: 0;
  }

  .how-it-works__grid--above {
    column-gap: calc(var(--grid-desktop-horizontal-spacing));
    justify-content: center;
  }
  .how-it-works__images.grid > * {
    width: calc(50% - var(--grid-desktop-horizontal-spacing) / 4);
    column-gap: var(--grid-desktop-horizontal-spacing);
  }
  .how-it-works__grid--above > * {
    width: 100%;
  }

  @media screen and (min-width: 768px) {  
    .how-it-works__grid--left .how-it-works__images,
    .how-it-works__grid--left .how-it-works__text {
      width: calc(50% - var(--grid-desktop-horizontal-spacing) / 2)
    }
    .how-it-works__grid--above > * {
      width: calc(25% - var(--grid-desktop-horizontal-spacing))
    }
  }
  @media screen and (max-width: 1100px) {
    .how-it-works__grid--left p {
      display: none;
    }
  }
{% endstyle %}


<div class="color-{{ section.settings.color_scheme }} gradient isolate">
  <div class="page-width{% if section.settings.heading == blank %} no-heading{% endif %} section-{{ section.id }}-padding">
    <h2 class="inline-richtext center {{ section.settings.heading_size }}{% if settings.animations_reveal_on_scroll %} scroll-trigger animate--slide-in{% endif %}">
      {{ section.settings.heading }}
    </h2>
    
    {%- if section.settings.layout == "left" -%}
      <div class="how-it-works grid how-it-works__grid--{{ section.settings.layout }}">
        <div class="how-it-works__images grid">
          {%- for block in section.blocks -%}
            <div
              class="media media--transparent ratio"
                style="--ratio-percent: 100%"
            >
              {%- if block.settings.image != blank -%}
                {%- liquid
                  assign grid_space_desktop = settings.spacing_grid_horizontal | divided_by: 4 | append: 'px'
                  assign grid_space_mobile = settings.spacing_grid_horizontal | divided_by: 8 | append: 'px'
                -%}
                  {%- capture sizes -%}
                      (min-width: {{ settings.page_width }}px) calc(({{ settings.page_width }}px - 100px) * 1 / 3 - {{ grid_space_desktop }}),
                      (min-width: 750px) calc((100vw - 100px) * 1 / 3 - {{ grid_space_desktop }}),
                      {% if section.settings.mobile_layout == 'how-it-works' %}calc((100vw - 30px) / 2 - {{ grid_space_mobile }}){% else %}calc(100vw - 30px){% endif %}
                    {%- endcapture -%}
                  {{
                    block.settings.image
                    | image_url: width: 3200
                    | image_tag:
                      loading: 'lazy',
                      sizes: sizes,
                      widths: '50, 75, 100, 150, 200, 300, 400, 500, 750, 1000, 1250, 1500, 1750, 2000, 2250, 2500, 2750, 3000, 3200'
                  }}
              {%- else -%}
                {{ 'detailed-apparel-1' | placeholder_svg_tag: 'placeholder-svg' }}
              {%- endif -%}
              <span class="step-no">{{ forloop.index }}</span>
            </div>
          {%- endfor -%}
        </div>
        <div class="how-it-works__text">
          {%- for block in section.blocks -%}
            <div class="grid">
              <div class="how-it-works__text_step">
                <span class="step-no">{{ forloop.index }}</span>
              </div>
              <div class="how-it-works__text_text">
                <h3>{{ block.settings.title }}</h3>
                <p>{{ block.settings.text }}</p>
              </div>
            </div>
          {%- endfor -%}
        </div>
      </div>

    {%- else -%}
      <div
        class="how-it-works__item grid how-it-works__grid--{{ section.settings.layout }}{% if settings.animations_reveal_on_scroll %} scroll-trigger animate--slide-in{% endif %}"
        {{ block.shopify_attributes }}
      >
        {%- for block in section.blocks -%}        
        
            <div class="how-it-works-card {% if section.settings.card_styles == 'none' %}global-media-settings{% else %}card-wrapper {{ section.settings.card_styles }} color-{{ settings.card_color_scheme }} gradient{% endif %}">
              <div
                class="media media--transparent ratio"
                  style="--ratio-percent: 100%"
              >
                {%- if block.settings.image != blank -%}
                    {%- capture sizes -%}
                        (min-width: {{ settings.page_width }}px) calc(({{ settings.page_width }}px - 100px) * 1 / 3 - {{ grid_space_desktop }}),
                        (min-width: 750px) calc((100vw - 100px) * 1 / 3 - {{ grid_space_desktop }}),
                        {% if section.settings.mobile_layout == 'how-it-works' %}calc((100vw - 30px) / 2 - {{ grid_space_mobile }}){% else %}calc(100vw - 30px){% endif %}
                      {%- endcapture -%}
                    {{
                      block.settings.image
                      | image_url: width: 3200
                      | image_tag:
                        loading: 'lazy',
                        sizes: sizes,
                        widths: '50, 75, 100, 150, 200, 300, 400, 500, 750, 1000, 1250, 1500, 1750, 2000, 2250, 2500, 2750, 3000, 3200'
                    }}
                {%- else -%}
                  {{ 'detailed-apparel-1' | placeholder_svg_tag: 'placeholder-svg' }}
                {%- endif -%}
              </div>
                
              <div class="how-it-works__text">
                  <div class="grid">
                    <div class="how-it-works__text_step">
                      <span class="step-no">{{ forloop.index }}</span>
                    </div>
                    <div class="how-it-works__text_text">
                      <h3>{{ block.settings.title }}</h3>
                      <p>{{ block.settings.text }}</p>
                    </div>
                  </div>
              </div>
            </div>
          {%- endfor -%}
      </div>
    {%- endif -%}
  </div>
</div>

{% schema %}
{
  "name": "How It Works",
  "tag": "section",
  "class": "section",
  "disabled_on": {
    "groups": [
      "header",
      "footer"
    ]
  },
  "settings": [
    {
      "type": "inline_richtext",
      "id": "heading",
      "default": "How It Works",
      "label": "How It Works"
    },
    {
      "type": "select",
      "id": "heading_size",
      "options": [
        {
          "value": "h2",
          "label": "t:sections.all.heading_size.options__1.label"
        },
        {
          "value": "h1",
          "label": "t:sections.all.heading_size.options__2.label"
        },
        {
          "value": "h0",
          "label": "t:sections.all.heading_size.options__3.label"
        }
      ],
      "default": "h1",
      "label": "t:sections.all.heading_size.label"
    },
    {
      "type": "select",
      "id": "layout",
      "options": [
        {
          "value": "left",
          "label": "Images on left"
        },
        {
          "value": "above",
          "label": "Image above each item"
        }
      ],
      "default": "left",
      "label": "Image layout"
    },
    {
      "type": "select",
      "id": "mobile_columns",
      "options": [
        {
          "value": "1",
          "label": "1"
        },
        {
          "value": "2",
          "label": "2"
        }
      ],
      "default": "2",
      "label": "Mobile columns"
    },
    {
      "type": "color_scheme",
      "id": "color_scheme",
      "label": "t:sections.all.colors.label",
      "info": "t:sections.all.colors.has_cards_info",
      "default": "background-1"
    },
    {
      "type": "header",
      "content": "t:sections.all.padding.section_padding_heading"
    },
    {
      "type": "range",
      "id": "padding_top",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "t:sections.all.padding.padding_top",
      "default": 36
    },
    {
      "type": "range",
      "id": "padding_bottom",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "t:sections.all.padding.padding_bottom",
      "default": 36
    }
  ],
  "blocks": [
    {
      "type": "column",
      "name": "Step",
      "settings": [
        {
          "type": "image_picker",
          "id": "image",
          "label": "Image"
        },
        {
          "type": "text",
          "id": "title",
          "default": "Title",
          "label": "Title"
        },
        {
          "type": "text",
          "id": "text",
          "default": "Caption",
          "label": "Caption"
        }
      ]
    }
  ],
  "presets": [
    {
      "name": "How It Works",
      "blocks": [
        {
          "type": "column"
        },
        {
          "type": "column"
        },
        {
          "type": "column"
        },
        {
          "type": "column"
        }
      ]
    }
  ]
}
{% endschema %}
